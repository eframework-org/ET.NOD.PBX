//-------------------------------------------------//
//                    MIT License                  //
//    Copyright (c) 2025 EFramework Organization   //
//          SEE LICENSE.md FOR MORE DETAILS        //
//-------------------------------------------------//

import * as fs from "fs"
import { XEnv, XFile, XString, XTest } from "ep.uni.util"
import { CodeGeneratorRequest, CodeGeneratorResponse } from "google-protobuf/google/protobuf/compiler/plugin_pb"
import { Writer } from "./utility/Writer"

(async () => {
    try {
        const request = CodeGeneratorRequest.deserializeBinary(new Uint8Array(fs.readFileSync(0))) // Using 0 instead of process.stdin.fd.
        const response = new CodeGeneratorResponse()

        const paramter = request.getParameter()
        const relative = paramter && paramter.indexOf("paths=source_relative") // See protogen.go->newFile

        request.getFileToGenerateList().forEach(file => {
            const pbdesc = request.getProtoFileList().find(ele => ele.getName() == file)
            if (pbdesc == null) throw new Error(`PB desc of ${file} was not found.`)

            const pkgpath = pbdesc.getOptions().getGoPackage()
            if (XString.IsNullOrEmpty(pkgpath)) throw new Error(`Go package of ${file} was not found.`)
            const pkgname = XFile.FileName(pkgpath, false)
            const descname = XFile.NormalizePath(file).replace(/\//gm, "_").replace(".proto", "_proto")
            const pbname = XFile.FileName(file).replace(".proto", ".pbx.go")
            const cversion = request.getCompilerVersion()
            const sversion = cversion ? `v${cversion.getMajor()}.${cversion.getMinor()}.${cversion.getPatch()}` : "(unknown)"

            const writer = new Writer()
            writer.Line(`// Code generated by ${XFile.FileName(__filename, false)}. DO NOT EDIT.`)
            writer.Line(`// version: v${XEnv.Version}, protoc: ${sversion}`)
            writer.Line(`// source: ${file}`)
            writer.Line()

            writer.Line(`package ${XFile.FileName(pkgname)}`)
            writer.Line()

            writer.Line("import (")
            writer.Indent()
            writer.Line(`"github.com/eframework-org/EP.GO.PBX/XProto"`)
            writer.Outdent()
            writer.Line(")")
            writer.Line()

            writer.Line("func init() {")
            writer.Indent()
            writer.Line(`file_${descname}_init()`)
            writer.Line(`XProto.RegMeta(File_${descname})`)
            writer.Outdent()
            writer.Line("}")

            const pbfile = new CodeGeneratorResponse.File()
            pbfile.setContent(writer.Flush())
            pbfile.setName(!relative ? XFile.PathJoin(pkgname, pbname) : XFile.PathJoin(pkgpath, pkgname, pbname))

            response.addFile(pbfile)
        })

        process.stdout.write(Buffer.from(response.serializeBinary()))
    } catch (err) {
        console.error("Unexpected: ", err)
        if (!XTest.IsJest) process.exit(1)
    }
})()